version '0.3.3'

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'signing'

apply plugin: 'jacoco'

group = 'io.github.angpysha'
archivesBaseName = 'diploma_bridge'
sourceCompatibility = 1.8
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2"
    }
}

apply plugin: "com.github.kt3k.coveralls"

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

repositories {
    mavenCentral()
}

//apply plugin: "com.github.kt3k.coveralls"

task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar, sourceJar
}

signing {
    sign configurations.archives
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    // https://mvnrepository.com/artifact/com.mashape.unirest/unirest-java
    implementation group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'
// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
    implementation 'com.google.code.gson:gson:2.8.1'

}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: mavenUser, password: mavenPass)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: mavenUser, password: mavenPass)
            }

            pom.project {
                name 'Bridge application'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Library is using as bridge between Raspberry PI and Android'
                url 'https://angpysha.github.io/diploma_bridge/'

                scm {
                    connection 'scm:git:git@github.com:angpysha/diploma_bridge.git'
                    url 'https://github.com/angpysha/diploma_bridge'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'andrewpetrowsky'
                        name 'Andrew Petrowsky'
                        email 'angpysha@gmail.com'
                    }
                }
            }
        }
    }
}
